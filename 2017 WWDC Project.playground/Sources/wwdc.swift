import Foundation
import UIKit

public class WWDCAnimation : UIView {
    override public init(frame: CGRect) {
        super.init(frame: CGRect(x: 0, y: 0, width: 185, height: 36))
        
        /*
        let pathAnimation: CABasicAnimation = CABasicAnimation(keyPath: "strokeEnd")
        pathAnimation.duration = 10.0
        pathAnimation.fromValue = NSNumber(value: 0.0)
        pathAnimation.toValue = NSNumber(value: 1.0)
        pathAnimation.timingFunction = CAMediaTimingFunction(name: kCAMediaTimingFunctionLinear)
        */
        
        
        let rootLayer = CAShapeLayer() // Generated by Svgsus
        ({
            let layer1 = CAShapeLayer()
            let translateTransform = CATransform3DMakeTranslation(-6, -20.116, 0)
            let scaleTransform = CATransform3DMakeScale(1, 1, 1)
            layer1.transform = CATransform3DConcat(translateTransform, scaleTransform)
            ({
                let layer2 = CAShapeLayer()
                layer2.fillColor = UIColor.clear.cgColor
                layer2.strokeColor = UIColor(red: 60/255, green: 60/255, blue:60/255, alpha: 1).cgColor
                layer2.lineWidth = 1
                layer2.strokeEnd = 0.0
                
                
                
                layer1.addSublayer(layer2)
                let path = UIBezierPath()
                path.move(to: CGPoint(x: 51.142, y: 54.566))
                path.addLine(to: CGPoint(x: 46.242000000000004, y: 54.566))
                path.addLine(to: CGPoint(x: 39.67400000000001, y: 29.756000000000004))
                path.addLine(to: CGPoint(x: 45.05500000000001, y: 29.756000000000004))
                path.addLine(to: CGPoint(x: 48.958000000000006, y: 47.723))
                path.addLine(to: CGPoint(x: 49.096000000000004, y: 47.723))
                path.addLine(to: CGPoint(x: 53.73800000000001, y: 29.755))
                path.addLine(to: CGPoint(x: 58.12200000000001, y: 29.755))
                path.addLine(to: CGPoint(x: 62.76500000000001, y: 47.723))
                path.addLine(to: CGPoint(x: 62.90200000000001, y: 47.723))
                path.addLine(to: CGPoint(x: 66.822, y: 29.755))
                path.addLine(to: CGPoint(x: 72.20400000000001, y: 29.755))
                path.addLine(to: CGPoint(x: 65.62, y: 54.566))
                path.addLine(to: CGPoint(x: 60.720000000000006, y: 54.566))
                path.addLine(to: CGPoint(x: 56.010000000000005, y: 37.614000000000004))
                path.addLine(to: CGPoint(x: 55.854000000000006, y: 37.614000000000004))
                path.close()
                layer2.path = path.cgPath
                
                //layer2.add(pathAnimation, forKey: "strokeEnd")
                animateLayer(layer: layer2)
            })()
            
            rootLayer
                .addSublayer(layer1)
        })()
        ({
            let layer1 = CAShapeLayer()
            let translateTransform = CATransform3DMakeTranslation(-6, -20.116, 0)
            let scaleTransform = CATransform3DMakeScale(1, 1, 1)
            layer1.transform = CATransform3DConcat(translateTransform, scaleTransform)
            ({
                let layer2 = CAShapeLayer()
                layer2.fillColor = UIColor.clear.cgColor
                layer2.strokeColor = UIColor(red: 60/255, green: 60/255, blue:60/255, alpha: 1).cgColor
                layer2.lineWidth = 1
                layer2.strokeEnd = 0.0
                layer1.addSublayer(layer2)
                let path = UIBezierPath()
                path.move(to: CGPoint(x: 85.134, y: 54.566))
                path.addLine(to: CGPoint(x: 80.234, y: 54.566))
                path.addLine(to: CGPoint(x: 73.666, y: 29.756000000000004))
                path.addLine(to: CGPoint(x: 79.048, y: 29.756000000000004))
                path.addLine(to: CGPoint(x: 82.95, y: 47.723))
                path.addLine(to: CGPoint(x: 83.08800000000001, y: 47.723))
                path.addLine(to: CGPoint(x: 87.73, y: 29.755))
                path.addLine(to: CGPoint(x: 92.114, y: 29.755))
                path.addLine(to: CGPoint(x: 96.757, y: 47.723))
                path.addLine(to: CGPoint(x: 96.894, y: 47.723))
                path.addLine(to: CGPoint(x: 100.81400000000001, y: 29.755))
                path.addLine(to: CGPoint(x: 106.19600000000001, y: 29.755))
                path.addLine(to: CGPoint(x: 99.61, y: 54.566))
                path.addLine(to: CGPoint(x: 94.71, y: 54.566))
                path.addLine(to: CGPoint(x: 90, y: 37.614))
                path.addLine(to: CGPoint(x: 89.845, y: 37.614))
                path.close()
                layer2.path = path.cgPath
                
                animateLayer(layer: layer2)
            })()
            
            rootLayer
                .addSublayer(layer1)
        })()
        ({
            let layer1 = CAShapeLayer()
            let translateTransform = CATransform3DMakeTranslation(-6, -20.116, 0)
            let scaleTransform = CATransform3DMakeScale(1, 1, 1)
            layer1.transform = CATransform3DConcat(translateTransform, scaleTransform)
            ({
                let layer2 = CAShapeLayer()
                
                layer2.fillColor = UIColor.clear.cgColor
                layer2.strokeColor = UIColor(red: 60/255, green: 60/255, blue:60/255, alpha: 1).cgColor
                layer2.lineWidth = 1
                layer2.strokeEnd = 0.0
                layer1.addSublayer(layer2)
                let path = UIBezierPath()
                path.move(to: CGPoint(x: 114.174, y: 50.269))
                path.addLine(to: CGPoint(x: 117.83600000000001, y: 50.269))
                path.addCurve(to: CGPoint(x: 124.98800000000001, y: 42.083999999999996), controlPoint1: CGPoint(x: 122.47800000000001, y: 50.269), controlPoint2: CGPoint(x: 124.98800000000001, y: 47.449))
                path.addCurve(to: CGPoint(x: 117.83600000000001, y: 34.038), controlPoint1: CGPoint(x: 124.98800000000001, y: 36.891999999999996), controlPoint2: CGPoint(x: 122.40800000000002, y: 34.038))
                path.addLine(to: CGPoint(x: 114.174, y: 34.038))
                path.addLine(to: CGPoint(x: 114.174, y: 50.268))
                path.close()
                path.move(to: CGPoint(x: 118.45400000000001, y: 29.755))
                path.addCurve(to: CGPoint(x: 130.28400000000002, y: 42.067), controlPoint1: CGPoint(x: 125.9, y: 29.755), controlPoint2: CGPoint(x: 130.28400000000002, y: 34.192))
                path.addCurve(to: CGPoint(x: 118.45400000000002, y: 54.566), controlPoint1: CGPoint(x: 130.28400000000002, y: 49.941), controlPoint2: CGPoint(x: 125.90000000000002, y: 54.566))
                path.addLine(to: CGPoint(x: 108.98200000000003, y: 54.566))
                path.addLine(to: CGPoint(x: 108.98200000000003, y: 29.756))
                path.addLine(to: CGPoint(x: 118.45400000000002, y: 29.756))
                path.close()
                layer2.path = path.cgPath
                
                animateLayer(layer: layer2)
            })()
            
            rootLayer
                .addSublayer(layer1)
        })()
        ({
            let layer1 = CAShapeLayer()
            let translateTransform = CATransform3DMakeTranslation(-6, -20.116, 0)
            let scaleTransform = CATransform3DMakeScale(1, 1, 1)
            layer1.transform = CATransform3DConcat(translateTransform, scaleTransform)
            ({
                let layer2 = CAShapeLayer()
                layer2.fillColor = UIColor.clear.cgColor
                layer2.strokeColor = UIColor(red: 60/255, green: 60/255, blue:60/255, alpha: 1).cgColor
                layer2.lineWidth = 1
                layer2.strokeEnd = 0.0
                layer1.addSublayer(layer2)
                let path = UIBezierPath()
                path.move(to: CGPoint(x: 133.198, y: 42.153))
                path.addCurve(to: CGPoint(x: 144.941, y: 29.326), controlPoint1: CGPoint(x: 133.198, y: 34.158), controlPoint2: CGPoint(x: 137.755, y: 29.326))
                path.addCurve(to: CGPoint(x: 155.842, y: 38.662), controlPoint1: CGPoint(x: 150.907, y: 29.326), controlPoint2: CGPoint(x: 155.446, y: 33.109))
                path.addLine(to: CGPoint(x: 150.787, y: 38.662))
                path.addCurve(to: CGPoint(x: 144.941, y: 33.625), controlPoint1: CGPoint(x: 150.305, y: 35.619), controlPoint2: CGPoint(x: 147.96800000000002, y: 33.625))
                path.addCurve(to: CGPoint(x: 138.494, y: 42.135), controlPoint1: CGPoint(x: 141.02100000000002, y: 33.625), controlPoint2: CGPoint(x: 138.494, y: 36.909))
                path.addCurve(to: CGPoint(x: 144.959, y: 50.698), controlPoint1: CGPoint(x: 138.494, y: 47.431), controlPoint2: CGPoint(x: 140.986, y: 50.698))
                path.addCurve(to: CGPoint(x: 150.804, y: 45.953), controlPoint1: CGPoint(x: 148.036, y: 50.698), controlPoint2: CGPoint(x: 150.254, y: 48.892))
                path.addLine(to: CGPoint(x: 155.859, y: 45.953))
                path.addCurve(to: CGPoint(x: 144.941, y: 54.996), controlPoint1: CGPoint(x: 155.274, y: 51.489000000000004), controlPoint2: CGPoint(x: 151.029, y: 54.996))
                path.addCurve(to: CGPoint(x: 133.198, y: 42.153000000000006), controlPoint1: CGPoint(x: 137.719, y: 54.996), controlPoint2: CGPoint(x: 133.198, y: 50.166000000000004))
                layer2.path = path.cgPath
                
                animateLayer(layer: layer2)
            })()
            
            rootLayer
                .addSublayer(layer1)
        })()
        ({
            let layer1 = CAShapeLayer()
            let translateTransform = CATransform3DMakeTranslation(-6, -20.116, 0)
            let scaleTransform = CATransform3DMakeScale(1, 1, 1)
            layer1.transform = CATransform3DConcat(translateTransform, scaleTransform)
            ({
                let layer2 = CAShapeLayer()
                layer2.fillColor = UIColor.clear.cgColor
                layer2.strokeColor = UIColor(red: 60/255, green: 60/255, blue:60/255, alpha: 1).cgColor
                layer2.lineWidth = 1
                layer2.strokeEnd = 0.0
                layer1.addSublayer(layer2)
                let path = UIBezierPath()
                path.move(to: CGPoint(x: 164.955, y: 34.519))
                path.addLine(to: CGPoint(x: 164.851, y: 34.519))
                path.addLine(to: CGPoint(x: 158.524, y: 38.885999999999996))
                path.addLine(to: CGPoint(x: 158.524, y: 34.208999999999996))
                path.addLine(to: CGPoint(x: 164.937, y: 29.755999999999997))
                path.addLine(to: CGPoint(x: 170.097, y: 29.755999999999997))
                path.addLine(to: CGPoint(x: 170.097, y: 54.565999999999995))
                path.addLine(to: CGPoint(x: 164.955, y: 54.565999999999995))
                path.close()
                layer2.path = path.cgPath
                
                animateLayer(layer: layer2)
            })()
            
            rootLayer
                .addSublayer(layer1)
        })()
        ({
            let layer1 = CAShapeLayer()
            let translateTransform = CATransform3DMakeTranslation(-6, -20.116, 0)
            let scaleTransform = CATransform3DMakeScale(1, 1, 1)
            layer1.transform = CATransform3DConcat(translateTransform, scaleTransform)
            ({
                let layer2 = CAShapeLayer()
                layer2.fillColor = UIColor.clear.cgColor
                layer2.strokeColor = UIColor(red: 60/255, green: 60/255, blue:60/255, alpha: 1).cgColor
                layer2.lineWidth = 1
                layer2.strokeEnd = 0.0
                layer1.addSublayer(layer2)
                let path = UIBezierPath()
                path.move(to: CGPoint(x: 185.856, y: 33.986))
                path.addLine(to: CGPoint(x: 185.856, y: 33.882))
                path.addLine(to: CGPoint(x: 173.236, y: 33.882))
                path.addLine(to: CGPoint(x: 173.236, y: 29.755999999999997))
                path.addLine(to: CGPoint(x: 190.98, y: 29.755999999999997))
                path.addLine(to: CGPoint(x: 190.98, y: 33.934))
                path.addLine(to: CGPoint(x: 180.629, y: 54.566))
                path.addLine(to: CGPoint(x: 175.179, y: 54.566))
                path.close()
                layer2.path = path.cgPath
                
                animateLayer(layer: layer2)
            })()
            
            rootLayer
                .addSublayer(layer1)
        })()
        ({
            let layer1 = CAShapeLayer()
            let translateTransform = CATransform3DMakeTranslation(-6, -20.116, 0)
            let scaleTransform = CATransform3DMakeScale(1, 1, 1)
            layer1.transform = CATransform3DConcat(translateTransform, scaleTransform)
            ({
                let layer2 = CAShapeLayer()
                layer2.fillColor = UIColor.clear.cgColor
                layer2.strokeColor = UIColor(red: 60/255, green: 60/255, blue:60/255, alpha: 1).cgColor
                layer2.lineWidth = 1
                layer2.strokeEnd = 0.0
                layer1.addSublayer(layer2)
                let path = UIBezierPath()
                path.move(to: CGPoint(x: 29.983, y: 39.137))
                path.addCurve(to: CGPoint(x: 34.571, y: 46.053), controlPoint1: CGPoint(x: 30.035, y: 44.314), controlPoint2: CGPoint(x: 34.525, y: 46.029))
                path.addCurve(to: CGPoint(x: 32.214, y: 50.910999999999994), controlPoint1: CGPoint(x: 34.536, y: 46.172999999999995), controlPoint2: CGPoint(x: 33.857, y: 48.509))
                path.addCurve(to: CGPoint(x: 26.977999999999998, y: 55.11599999999999), controlPoint1: CGPoint(x: 30.784, y: 52.99399999999999), controlPoint2: CGPoint(x: 29.308, y: 55.065999999999995))
                path.addCurve(to: CGPoint(x: 21.340999999999998, y: 53.75599999999999), controlPoint1: CGPoint(x: 24.692999999999998, y: 55.15599999999999), controlPoint2: CGPoint(x: 23.955, y: 53.75299999999999))
                path.addCurve(to: CGPoint(x: 15.743999999999996, y: 55.157999999999994), controlPoint1: CGPoint(x: 18.723999999999997, y: 53.75599999999999), controlPoint2: CGPoint(x: 17.909999999999997, y: 55.074999999999996))
                path.addCurve(to: CGPoint(x: 10.343999999999996, y: 50.834999999999994), controlPoint1: CGPoint(x: 13.491999999999997, y: 55.242999999999995), controlPoint2: CGPoint(x: 11.781999999999996, y: 52.910999999999994))
                path.addCurve(to: CGPoint(x: 8.171999999999995, y: 33.60999999999999), controlPoint1: CGPoint(x: 7.408999999999995, y: 46.59499999999999), controlPoint2: CGPoint(x: 5.166999999999996, y: 38.85399999999999))
                path.addCurve(to: CGPoint(x: 15.243999999999996, y: 29.32699999999999), controlPoint1: CGPoint(x: 9.668999999999995, y: 31.01299999999999), controlPoint2: CGPoint(x: 12.341999999999995, y: 29.36999999999999))
                path.addCurve(to: CGPoint(x: 20.883999999999997, y: 30.80699999999999), controlPoint1: CGPoint(x: 17.456999999999997, y: 29.28199999999999), controlPoint2: CGPoint(x: 19.532999999999994, y: 30.80699999999999))
                path.addCurve(to: CGPoint(x: 27.428999999999995, y: 29.23999999999999), controlPoint1: CGPoint(x: 22.230999999999998, y: 30.80699999999999), controlPoint2: CGPoint(x: 24.769, y: 28.97499999999999))
                path.addCurve(to: CGPoint(x: 33.678999999999995, y: 32.61999999999999), controlPoint1: CGPoint(x: 28.543999999999993, y: 29.283999999999992), controlPoint2: CGPoint(x: 31.666999999999994, y: 29.691999999999993))
                path.addCurve(to: CGPoint(x: 29.982999999999993, y: 39.13699999999999), controlPoint1: CGPoint(x: 33.516, y: 32.72499999999999), controlPoint2: CGPoint(x: 29.945999999999994, y: 34.80799999999999))
                path.move(to: CGPoint(x: 25.68, y: 26.433))
                path.addCurve(to: CGPoint(x: 27.458, y: 20.977), controlPoint1: CGPoint(x: 26.87, y: 24.988), controlPoint2: CGPoint(x: 27.676, y: 22.979))
                path.addCurve(to: CGPoint(x: 22.424999999999997, y: 23.567), controlPoint1: CGPoint(x: 25.737, y: 21.047), controlPoint2: CGPoint(x: 23.651999999999997, y: 22.127))
                path.addCurve(to: CGPoint(x: 20.618999999999996, y: 28.855), controlPoint1: CGPoint(x: 21.314999999999998, y: 24.846), controlPoint2: CGPoint(x: 20.353999999999996, y: 26.892))
                path.addCurve(to: CGPoint(x: 25.678999999999995, y: 26.433), controlPoint1: CGPoint(x: 22.533999999999995, y: 29.003), controlPoint2: CGPoint(x: 24.486999999999995, y: 27.879))
                layer2.path = path.cgPath
                
                animateLayer(layer: layer2)
            })()
            
            rootLayer
                .addSublayer(layer1)
        })()
        
        
        rootLayer.bounds = CGRect(x: 0, y: 0, width: 185, height: 36)
        rootLayer.anchorPoint = CGPoint(x: 0, y: 0)
        //rootLayer.fillColor = UIColor.clear.cgColor
        //rootLayer.strokeColor = UIColor.red.cgColor
        //rootLayer.strokeEnd = 0.0
        //let shape = rootLayer.path
        
        
        self.layer.addSublayer(rootLayer)
        
        /*let pathAnimation: CABasicAnimation = CABasicAnimation(keyPath: "strokeEnd")
        pathAnimation.duration = 10.0
        pathAnimation.fromValue = NSNumber(value: 0.0)
        pathAnimation.toValue = NSNumber(value: 1.0)
        //Animation will happen right away*/
        //rootLayer.add(pathAnimation, forKey: "strokeEnd")
        self.backgroundColor = UIColor.clear
        

    }
    
    required public init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    func animateLayer(layer:CAShapeLayer) {
        
        let pathAnimation: CABasicAnimation = CABasicAnimation(keyPath: "strokeEnd")
        pathAnimation.duration = 2.0
        pathAnimation.fromValue = NSNumber(value: 0.0)
        pathAnimation.toValue = NSNumber(value: 1.0)
        pathAnimation.timingFunction = CAMediaTimingFunction(name: kCAMediaTimingFunctionLinear)
        
        
        layer.strokeEnd = 1.0
        
        
        layer.add(pathAnimation, forKey: "strokeEnd")
    }
}

